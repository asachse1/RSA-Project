#Name: Adam Sachsel
#Date: 04/22/2020
#Assn: RSN_Project
#Class: Marron CS441

Encoded Message (RSA Encryption): 9497737559653433055511951894611881033497728476006496577296382765063847171272755523762541737524727431888312984736431964433142022507607577658170768838346614497929499953837984549175275068615999869105593055016304926556338633856296747728838603398308342100912966340577476422899161218704374897314349428658910263044174497566753846401751279382027628782934872881724816834933055963215611727054663508451273102138183736889812117528040747865599235431695667117423220030456491772295815791836275097422372347807637498566648308464731730114196037009787795141492646435551642462223609351444744130168953488198756764327677852242389416032161950106026070827608156863790573350947065236969223487613980285000309179058615477923548744771703226507210881534242239780235745662867064404932598897345899176247066072346354761181505441046527818089406677996970252688959279436198929370551567254804887884569244449176412646944324976143266562382743247722136216316413705894145736400530771306610459597209640920972022524222887410419715878035753982361312828602781814518369541634721310156169526711810933784620587133115482344614405868267373806643729586578126027245985554602753032359790556089932037206081016035698590266813604026970651587859855500689896988868656095378255961576233977
Signature BEFORE and AFTER Encoding/Decoding = 1483182273414461829907973061615681
"I deserve an A"

Private Key: e = 65537
n = 319021520923262109880257296758359175732520353991769323009099897187154959977532053976743682301809149218144771542047948180111181570940710330433283270215808500899544207751877045509443791699132677278079403989948171660210245803352599489975448854498047110547790239108369791030111199045835392808343429313099078547856893121310093205219635312543779298437777877915131181120150534978853525918057650116056157709584427951906795706030954167639684121664864956191555484455908414691659773570767747860529846057959216046086073729034877266914026259482891862485110733907630539705268052308654875019616043453148698333773850249049501558421072952212981180696327382993066198257905214710753902000998789022817859002095889478540913164298800163855188453060929775020103026223582834455525591240958926959598289741652178180445313685162986557239781405732419180731535203727776075397381738649586504762310635250463219609846444319946990434548228781820827225485595193614430272877753601036860608433065412824865754481073328910887623366553839986230517986571272935612926957266390364710489728904337677824886201370654135407168195733415782347198460785236649691945881012759503069745782214603641024311326306938413633064180067904337551314420594762690807192681821648013336821082856567

Public Key: d = 27079614887713919118419691805647986551108697823461750521073938813985123553946790610992646972625605338977056686885465244456696264387188482356536839223805524978320100519152417781848967960423502505423741159895657093637938834613279688767160870616180723499356960192866032126897914159817847783585066409337781313788057073620215275350364393299678719459379561695559375018255297405852604859577867580078740335053758528715954415256270473695463063137184243271642326625085348901074253023088957098251789578717779557568653251668843893309775059607600705418384592104126656581479258662939210976000183861480785034877762621655894794841024064898657860574084653554026597752595363281663556592794824682371518820851076977217481282860732451819521853738847860359271648919103433990672620446329714802815107221837979442743584163411589947309973598314283755851825738874067116965536339198109146347689152443314246957471185163157454916764420805138650560877476203829999152123267238618522430579868774149560274790906413616710343025380493499945924253743485648363032585862511115129711912557491317058241937220354002504645868470029661524058674027097634355603212671152005410813349888866484882032170711354712030963653199004647565971260113637471823940179500671072719126893848273
n = 319021520923262109880257296758359175732520353991769323009099897187154959977532053976743682301809149218144771542047948180111181570940710330433283270215808500899544207751877045509443791699132677278079403989948171660210245803352599489975448854498047110547790239108369791030111199045835392808343429313099078547856893121310093205219635312543779298437777877915131181120150534978853525918057650116056157709584427951906795706030954167639684121664864956191555484455908414691659773570767747860529846057959216046086073729034877266914026259482891862485110733907630539705268052308654875019616043453148698333773850249049501558421072952212981180696327382993066198257905214710753902000998789022817859002095889478540913164298800163855188453060929775020103026223582834455525591240958926959598289741652178180445313685162986557239781405732419180731535203727776075397381738649586504762310635250463219609846444319946990434548228781820827225485595193614430272877753601036860608433065412824865754481073328910887623366553839986230517986571272935612926957266390364710489728904337677824886201370654135407168195733415782347198460785236649691945881012759503069745782214603641024311326306938413633064180067904337551314420594762690807192681821648013336821082856567


Notes: Modulus used was 4096 bits.
The algorithms used for extended Eucalids, and testing for Prime numbers were both very similar to the algoritms shown in class. I attempted to modify both but continued to get errors.

Build Instructions: The only non-native module used is the most recent version of gmpy2 for python as specified in the project instructions.
